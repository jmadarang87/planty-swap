{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Logo from \"../../../assets/images/PlantySwap_Logo.png\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport SocialSignInButtons from \"../../components/SocialSignInButtons\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignInScreen = function SignInScreen() {\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  console.log(errors);\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height;\n\n  var navigation = useNavigation();\n\n  var onSignInPressed = function onSignInPressed(data) {\n    console.log(data);\n  };\n\n  var onForgotPasswordPressed = function onForgotPasswordPressed() {\n    console.warn('Forgot Password');\n    navigation.navigate('ForgotPassword');\n  };\n\n  var onCreateAccountPressed = function onCreateAccountPressed() {\n    console.warn('Create Account');\n    navigation.navigate('CreateAccount');\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Image, {\n        source: Logo,\n        style: [styles.logo, {\n          height: height * 0.2\n        }],\n        resizeMode: \"contain\"\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Sign In\"\n      }), _jsx(CustomInput, {\n        name: \"username\",\n        placeholder: \"Username\",\n        control: control,\n        rules: {\n          required: 'Username is required.'\n        }\n      }), _jsx(CustomInput, {\n        name: \"password\",\n        placeholder: \"Password\",\n        control: control,\n        rules: {\n          required: 'Password is required.',\n          minLength: {\n            value: 8,\n            message: 'Password should be minimum 8 characters long.'\n          },\n          maxLength: {\n            value: 12,\n            message: 'Password should not be more than 12 characters long.'\n          }\n        },\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        text: \"Sign In\",\n        onPress: handleSubmit(onSignInPressed)\n      }), _jsx(CustomButton, {\n        text: \"Forgot Password?\",\n        type: 'TERTIARY',\n        onPress: onForgotPasswordPressed,\n        fgColor: \"#363636\"\n      }), _jsx(SocialSignInButtons, {}), _jsx(CustomButton, {\n        text: \"Don't have an account? Sign Up Now!\",\n        type: 'TERTIARY',\n        onPress: onCreateAccountPressed,\n        fgColor: \"#363636\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 35,\n    justifyContent: 'center',\n    height: '100%'\n  },\n  logo: {\n    width: '100%',\n    maxWidth: 1000\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","Logo","CustomInput","CustomButton","SocialSignInButtons","useNavigation","useForm","Controller","SignInScreen","control","handleSubmit","errors","formState","console","log","useWindowDimensions","height","navigation","onSignInPressed","data","onForgotPasswordPressed","warn","navigate","onCreateAccountPressed","styles","root","logo","title","required","minLength","value","message","maxLength","StyleSheet","create","alignItems","padding","justifyContent","width","maxWidth","fontSize","fontWeight","color","margin"],"sources":["/Users/jahnelmadarang/Dev/react-native/planty-swap/src/screens/SignInScreen/SignInScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n\tView,\n\tText,\n\tStyleSheet,\n\tImage,\n\tuseWindowDimensions,\n\tScrollView,\n\tTextInput,\n} from 'react-native';\nimport Logo from '../../../assets/images/PlantySwap_Logo.png';\nimport CustomInput from '../../components/CustomInput';\nimport CustomButton from '../../components/CustomButton';\nimport SocialSignInButtons from '../../components/SocialSignInButtons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst SignInScreen = () => {\n\t// const [userName, setUserName] = useState('');\n\t// const [password, setPassword] = useState('');\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm();\n\n\tconsole.log(errors);\n\n\tconst { height } = useWindowDimensions();\n\n\tconst navigation = useNavigation();\n\n\tconst onSignInPressed = (data) => {\n\t\tconsole.log(data);\n\n\t\t// navigation.navigate('Home');\n\t};\n\n\tconst onForgotPasswordPressed = () => {\n\t\tconsole.warn('Forgot Password');\n\t\tnavigation.navigate('ForgotPassword');\n\t};\n\n\tconst onCreateAccountPressed = () => {\n\t\tconsole.warn('Create Account');\n\t\tnavigation.navigate('CreateAccount');\n\t};\n\n\treturn (\n\t\t<ScrollView>\n\t\t\t<View style={styles.root}>\n\t\t\t\t<Image\n\t\t\t\t\tsource={Logo}\n\t\t\t\t\tstyle={[styles.logo, { height: height * 0.2 }]}\n\t\t\t\t\tresizeMode='contain'\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.title}>Sign In</Text>\n\t\t\t\t<CustomInput\n\t\t\t\t\tname='username'\n\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\trules={{ required: 'Username is required.' }}\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\tname='password'\n\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\trules={{\n\t\t\t\t\t\trequired: 'Password is required.',\n\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\tvalue: 8,\n\t\t\t\t\t\t\tmessage: 'Password should be minimum 8 characters long.',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 12,\n\t\t\t\t\t\t\tmessage: 'Password should not be more than 12 characters long.',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t/>\n\n\t\t\t\t<CustomButton\n\t\t\t\t\ttext='Sign In'\n\t\t\t\t\tonPress={handleSubmit(onSignInPressed)}\n\t\t\t\t\t// bgColor='#3B71F3'\n\t\t\t\t/>\n\t\t\t\t<CustomButton\n\t\t\t\t\ttext='Forgot Password?'\n\t\t\t\t\ttype={'TERTIARY'}\n\t\t\t\t\tonPress={onForgotPasswordPressed}\n\t\t\t\t\tfgColor='#363636'\n\t\t\t\t/>\n\t\t\t\t<SocialSignInButtons />\n\t\t\t\t<CustomButton\n\t\t\t\t\ttext=\"Don't have an account? Sign Up Now!\"\n\t\t\t\t\ttype={'TERTIARY'}\n\t\t\t\t\tonPress={onCreateAccountPressed}\n\t\t\t\t\tfgColor='#363636'\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</ScrollView>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\troot: {\n\t\talignItems: 'center',\n\t\tpadding: 35,\n\t\tjustifyContent: 'center',\n\t\theight: '100%',\n\t},\n\tlogo: {\n\t\twidth: '100%',\n\t\tmaxWidth: 1000,\n\t},\n\ttitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 'bold',\n\t\tcolor: '#051C60',\n\t\tmargin: 10,\n\t},\n});\n\nexport default SignInScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}