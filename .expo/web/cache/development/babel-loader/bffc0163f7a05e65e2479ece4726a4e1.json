{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Controller } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      placeholder = _ref.placeholder,\n      secureTextEntry = _ref.secureTextEntry;\n  return _jsx(Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          value = _ref2$field.value,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          error = _ref2.fieldState.error;\n      return _jsxs(View, {\n        style: [styles.container, {\n          borderColor: error ? 'red' : 'black'\n        }],\n        children: [_jsx(Text, {\n          children: error ? error.message : ''\n        }), _jsx(TextInput, {\n          value: value,\n          onChangeText: onChange,\n          onBlur: onBlur,\n          placeholder: placeholder,\n          style: [styles.input],\n          secureTextEntry: secureTextEntry\n        })]\n      });\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 525,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginVertical: 5,\n    height: 50,\n    margin: 10\n  },\n  input: {\n    backgroundColor: 'white',\n    width: '103%',\n    height: '100%'\n  }\n});\nexport default CustomInput;","map":{"version":3,"names":["React","useState","Controller","CustomInput","control","name","rules","placeholder","secureTextEntry","field","value","onChange","onBlur","error","fieldState","styles","container","borderColor","message","input","StyleSheet","create","alignItems","width","maxWidth","borderWidth","borderRadius","paddingHorizontal","marginVertical","height","margin","backgroundColor"],"sources":["/Users/jahnelmadarang/Dev/react-native/planty-swap/src/components/CustomInput/CustomInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TextInput } from 'react-native';\nimport { Controller } from 'react-hook-form';\n\nconst CustomInput = ({\n\tcontrol,\n\tname,\n\trules = {},\n\tplaceholder,\n\tsecureTextEntry,\n}) => {\n\t// const { height } = useWindowDimensions();\n\n\treturn (\n\t\t<Controller\n\t\t\tcontrol={control}\n\t\t\tname={name}\n\t\t\trules={rules}\n\t\t\trender={({\n\t\t\t\tfield: { value, onChange, onBlur },\n\t\t\t\tfieldState: { error },\n\t\t\t}) => (\n\t\t\t\t<View\n\t\t\t\t\tstyle={[styles.container, { borderColor: error ? 'red' : 'black' }]}\n\t\t\t\t>\n\t\t\t\t\t<Text>{error ? error.message : ''}</Text>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChangeText={onChange}\n\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tstyle={[styles.input]}\n\t\t\t\t\t\tsecureTextEntry={secureTextEntry}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\talignItems: 'center',\n\t\twidth: '100%',\n\t\tmaxWidth: 525,\n\n\t\tborderColor: 'black',\n\t\tborderWidth: 1,\n\t\tborderRadius: 5,\n\n\t\tpaddingHorizontal: 10,\n\t\tmarginVertical: 5,\n\t\theight: 50,\n\t\tmargin: 10,\n\t},\n\n\tinput: {\n\t\tbackgroundColor: 'white',\n\t\twidth: '103%',\n\t\theight: '100%',\n\t},\n});\n\nexport default CustomInput;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,UAAT,QAA2B,iBAA3B;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAMd;EAAA,IALLC,OAKK,QALLA,OAKK;EAAA,IAJLC,IAIK,QAJLA,IAIK;EAAA,sBAHLC,KAGK;EAAA,IAHLA,KAGK,2BAHG,EAGH;EAAA,IAFLC,WAEK,QAFLA,WAEK;EAAA,IADLC,eACK,QADLA,eACK;EAGL,OACC,KAAC,UAAD;IACC,OAAO,EAAEJ,OADV;IAEC,IAAI,EAAEC,IAFP;IAGC,KAAK,EAAEC,KAHR;IAIC,MAAM,EAAE;MAAA,wBACPG,KADO;MAAA,IACEC,KADF,eACEA,KADF;MAAA,IACSC,QADT,eACSA,QADT;MAAA,IACmBC,MADnB,eACmBA,MADnB;MAAA,IAEOC,KAFP,SAEPC,UAFO,CAEOD,KAFP;MAAA,OAIP,MAAC,IAAD;QACC,KAAK,EAAE,CAACE,MAAM,CAACC,SAAR,EAAmB;UAAEC,WAAW,EAAEJ,KAAK,GAAG,KAAH,GAAW;QAA/B,CAAnB,CADR;QAAA,WAGC,KAAC,IAAD;UAAA,UAAOA,KAAK,GAAGA,KAAK,CAACK,OAAT,GAAmB;QAA/B,EAHD,EAIC,KAAC,SAAD;UACC,KAAK,EAAER,KADR;UAEC,YAAY,EAAEC,QAFf;UAGC,MAAM,EAAEC,MAHT;UAIC,WAAW,EAAEL,WAJd;UAKC,KAAK,EAAE,CAACQ,MAAM,CAACI,KAAR,CALR;UAMC,eAAe,EAAEX;QANlB,EAJD;MAAA,EAJO;IAAA;EAJT,EADD;AAyBA,CAlCD;;AAoCA,IAAMO,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAChCL,SAAS,EAAE;IACVM,UAAU,EAAE,QADF;IAEVC,KAAK,EAAE,MAFG;IAGVC,QAAQ,EAAE,GAHA;IAKVP,WAAW,EAAE,OALH;IAMVQ,WAAW,EAAE,CANH;IAOVC,YAAY,EAAE,CAPJ;IASVC,iBAAiB,EAAE,EATT;IAUVC,cAAc,EAAE,CAVN;IAWVC,MAAM,EAAE,EAXE;IAYVC,MAAM,EAAE;EAZE,CADqB;EAgBhCX,KAAK,EAAE;IACNY,eAAe,EAAE,OADX;IAENR,KAAK,EAAE,MAFD;IAGNM,MAAM,EAAE;EAHF;AAhByB,CAAlB,CAAf;AAuBA,eAAe1B,WAAf"},"metadata":{},"sourceType":"module"}