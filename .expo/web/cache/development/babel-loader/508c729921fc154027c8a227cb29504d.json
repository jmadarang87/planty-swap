{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Logo from \"../../../assets/images/PlantySwap_Logo.png\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewPasswordScreen = function NewPasswordScreen() {\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height;\n\n  var navigation = useNavigation();\n\n  var onResetPressed = function onResetPressed(data) {\n    console.warn('Reset Password');\n    navigation.navigate('SignIn');\n  };\n\n  var onSignInPressed = function onSignInPressed() {\n    console.warn('Sign In');\n    navigation.navigate('SignIn');\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Image, {\n        source: Logo,\n        style: [styles.logo, {\n          height: height * 0.2\n        }],\n        resizeMode: \"contain\"\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Create a New Password\"\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Email\"\n      }), _jsx(CustomInput, {\n        name: \"email\",\n        placeholder: \"Email\",\n        control: control,\n        rules: {\n          required: 'Email is required.',\n          pattern: {\n            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            message: 'Please enter a valid email'\n          }\n        }\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Confirmation Code\"\n      }), _jsx(CustomInput, {\n        name: \"confirmation\",\n        placeholder: \"Confirmation Code\",\n        control: control,\n        rules: {\n          required: 'Confirmation Code is required.'\n        }\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"New Password\"\n      }), _jsx(CustomInput, {\n        name: \"password\",\n        placeholder: \"Password\",\n        control: control,\n        rules: {\n          required: 'Password is required.',\n          minLength: {\n            value: 8,\n            message: 'Password should be minimum 8 characters long.'\n          },\n          maxLength: {\n            value: 12,\n            message: 'Password should not be more than 12 characters long.'\n          }\n        },\n        secureTextEntry: true\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Confirm New Password\"\n      }), _jsx(CustomInput, {\n        name: \"password2\",\n        placeholder: \"Confirm Password\",\n        control: control,\n        rules: {\n          required: 'Password is required.',\n          minLength: {\n            value: 8,\n            message: 'Password should be minimum 8 characters long.'\n          },\n          maxLength: {\n            value: 12,\n            message: 'Password should not be more than 12 characters long.'\n          }\n        },\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        text: \"Reset\",\n        type: \"PRIMARY\",\n        onPress: handleSubmit(onResetPressed)\n      }), _jsx(CustomButton, {\n        text: \"Please Sign In / Sign Up\",\n        type: 'TERTIARY',\n        onPress: onSignInPressed\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 35,\n    justifyContent: 'center',\n    height: '100%'\n  },\n  logo: {\n    width: '100%',\n    maxWidth: 1000\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  },\n  label: {\n    width: '100%',\n    alignItems: 'left'\n  }\n});\nexport default NewPasswordScreen;","map":{"version":3,"names":["React","Logo","CustomInput","CustomButton","useNavigation","useForm","Controller","NewPasswordScreen","control","handleSubmit","errors","formState","useWindowDimensions","height","navigation","onResetPressed","data","console","warn","navigate","onSignInPressed","styles","root","logo","title","label","required","pattern","value","message","minLength","maxLength","StyleSheet","create","alignItems","padding","justifyContent","width","maxWidth","fontSize","fontWeight","color","margin"],"sources":["/Users/jahnelmadarang/Dev/react-native/planty-swap/src/screens/NewPasswordScreen/NewPasswordScreen.js"],"sourcesContent":["import React from 'react';\nimport {\n\tView,\n\tText,\n\tStyleSheet,\n\tImage,\n\tuseWindowDimensions,\n\tScrollView,\n} from 'react-native';\nimport Logo from '../../../assets/images/PlantySwap_Logo.png';\nimport CustomInput from '../../components/CustomInput';\nimport CustomButton from '../../components/CustomButton';\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst NewPasswordScreen = () => {\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm();\n\n\tconst { height } = useWindowDimensions();\n\n\tconst navigation = useNavigation();\n\n\tconst onResetPressed = (data) => {\n\t\tconsole.warn('Reset Password');\n\t\tnavigation.navigate('SignIn');\n\t};\n\n\tconst onSignInPressed = () => {\n\t\tconsole.warn('Sign In');\n\t\tnavigation.navigate('SignIn');\n\t};\n\n\treturn (\n\t\t<ScrollView>\n\t\t\t<View style={styles.root}>\n\t\t\t\t<Image\n\t\t\t\t\tsource={Logo}\n\t\t\t\t\tstyle={[styles.logo, { height: height * 0.2 }]}\n\t\t\t\t\tresizeMode='contain'\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.title}>Create a New Password</Text>\n\n\t\t\t\t<Text style={styles.label}>Email</Text>\n\t\t\t\t<CustomInput\n\t\t\t\t\tname='email'\n\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\trules={{\n\t\t\t\t\t\trequired: 'Email is required.',\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tvalue: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\t\t\t\t\t\t\tmessage: 'Please enter a valid email',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.label}>Confirmation Code</Text>\n\t\t\t\t<CustomInput\n\t\t\t\t\tname='confirmation'\n\t\t\t\t\tplaceholder='Confirmation Code'\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\trules={{ required: 'Confirmation Code is required.' }}\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.label}>New Password</Text>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tname='password'\n\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\trules={{\n\t\t\t\t\t\trequired: 'Password is required.',\n\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\tvalue: 8,\n\t\t\t\t\t\t\tmessage: 'Password should be minimum 8 characters long.',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 12,\n\t\t\t\t\t\t\tmessage: 'Password should not be more than 12 characters long.',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.label}>Confirm New Password</Text>\n\t\t\t\t<CustomInput\n\t\t\t\t\tname='password2'\n\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\trules={{\n\t\t\t\t\t\trequired: 'Password is required.',\n\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\tvalue: 8,\n\t\t\t\t\t\t\tmessage: 'Password should be minimum 8 characters long.',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 12,\n\t\t\t\t\t\t\tmessage: 'Password should not be more than 12 characters long.',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t/>\n\t\t\t\t<CustomButton\n\t\t\t\t\ttext='Reset'\n\t\t\t\t\ttype='PRIMARY'\n\t\t\t\t\tonPress={handleSubmit(onResetPressed)}\n\t\t\t\t/>\n\t\t\t\t<CustomButton\n\t\t\t\t\ttext='Please Sign In / Sign Up'\n\t\t\t\t\ttype={'TERTIARY'}\n\t\t\t\t\tonPress={onSignInPressed}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</ScrollView>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\troot: {\n\t\talignItems: 'center',\n\t\tpadding: 35,\n\t\tjustifyContent: 'center',\n\t\theight: '100%',\n\t},\n\tlogo: {\n\t\twidth: '100%',\n\t\tmaxWidth: 1000,\n\t},\n\ttitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 'bold',\n\t\tcolor: '#051C60',\n\t\tmargin: 10,\n\t},\n\tlabel: {\n\t\twidth: '100%',\n\t\talignItems: 'left',\n\t},\n});\n\nexport default NewPasswordScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}